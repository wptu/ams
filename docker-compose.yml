services:
  db:
    image: postgres:15
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: always
    ports:
      - "8000:8000"  # เปิด port 8000 สำหรับเข้าถึง Django โดยตรง
    volumes:
      - ./app:/app
      - media_data:/app/media
      - static_data:/app/static
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint:
    - gunicorn
    - --reload
    - ams.wsgi:application
    - --bind
    - 0.0.0.0:8000
    - --workers
    - "1"
    - --threads
    - "4"
    - --worker-class
    - gthread
    - --timeout
    - "300"
    - --keep-alive
    - "2"
    - --max-requests
    - "500"
    - --log-level
    - debug
    - --graceful-timeout
    - "30"
    - --worker-tmp-dir
    - /dev/shm
    - --access-logfile
    - "-"

  nginx:
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_data:/usr/share/nginx/html/static
      - media_data:/usr/share/nginx/html/media
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:
  media_data:
  static_data:
