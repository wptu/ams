version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: always
    ports:
      - "8000:8000"  # เปิด port 8000 สำหรับเข้าถึง Django โดยตรง
    volumes:
      - ./app:/app
      - media_data:/app/media
      - static_data:/app/static
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn ams.wsgi:application --bind 0.0.0.0:8000"

  nginx:
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_data:/usr/share/nginx/html/static
      - media_data:/usr/share/nginx/html/media
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:
  media_data:
  static_data:
